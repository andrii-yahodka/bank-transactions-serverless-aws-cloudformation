AWSTemplateFormatVersion: 2010-09-09
Description: API Gateway, Authorizer and Lambda function with IAM role & policy
Parameters:
  ApiGatewayHTTPMethod:
    Type: String
    Default: POST
  Env:
    Type: String
    Default: dev
  Prefix:
    Type: String
    Default: sri
Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join:
        - _
        - - Ref: Prefix
          - LambdaRole
          - Ref: Env
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName:
          Fn::Join:
          - _
          - - Ref: Prefix
            - LambdaPolicy
            - Ref: Env
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource: '*'
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName:
        Fn::Join:
        - _
        - - Ref: Prefix
          - Ref: Env
      Description:
        Fn::Join:
        - _
        - - Ref: Prefix
          - LambdaFunction
          - Ref: Env
      Runtime: python3.8
      MemorySize: 128
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      Handler: index.handler
      Code:
        ZipFile: "import json\n\ndef handler(event, context):\n    return {\n    \
          \    'statusCode': 200,\n        'body': 'Hello, world!'\n    }\n"
  LambdaPermission:
    DependsOn: LambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
        - LambdaFunction
        - Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
        - ''
        - - 'arn:aws:execute-api:'
          - Ref: AWS::Region
          - ':'
          - Ref: AWS::AccountId
          - ':'
          - Ref: ApiGateway
          - /*
  LambdaLogGroup:
    DependsOn: LambdaFunction
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
        - ''
        - - /aws/lambda/
          - Ref: LambdaFunction
      RetentionInDays: 30
  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name:
        Fn::Join:
        - _
        - - Ref: Prefix
          - Ref: Env
      Description:
        Fn::Join:
        - _
        - - Ref: Prefix
          - APIGateway
          - Ref: Env
      EndpointConfiguration:
        Types:
        - REGIONAL
  RestMethod:
    DependsOn:
    - LambdaPermission
    - LambdaFunction
    - ApiGateway
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod:
        Ref: ApiGatewayHTTPMethod
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Sub:
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn:
              Fn::GetAtt:
              - LambdaFunction
              - Arn
      ResourceId:
        Fn::GetAtt:
        - ApiGateway
        - RootResourceId
      RestApiId:
        Ref: ApiGateway
      AuthorizationType: AWS_IAM
Outputs:
  ApiInvokeURL:
    Description: Invoke this URL in Postman or cURL to access the API Gateway
    Value:
      Fn::Join:
      - ''
      - - https://
        - Ref: ApiGateway
        - .execute-api.
        - Ref: AWS::Region
        - .amazonaws.com/
        - Ref: Env
